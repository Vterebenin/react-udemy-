{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list/todo-list-item/index.js","components/todo-list/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","Component","TodoListItem","_this$props","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","todo_list_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","toConsumableArray","slice","addItem","text","newItem","_ref2","_ref3","toggleProperty","_ref4","arr","propName","oldItem","objectSpread","defineProperty","items","length","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.e6702e1a.chunk.js","sourcesContent":["import AppHeader from './app-header'\r\n\r\nexport default AppHeader;","import React from 'react';\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Todo List</h1>\n      <h2>{toDo} more to do, {done} done</h2>\n    </div>\n  );\n};\n\nexport default AppHeader;\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, { Component } from 'react';\nimport './search-panel.css';\n\n\nexport default class SearchPanel extends Component {\n  state = {\n    term: ''\n  }\n\n  onSearchChange = (e) => {\n    const term = e.target.value;\n    this.setState({ term });\n    this.props.onSearchChange(term);\n  };\n  \n  render() {\n    return (\n      <input type=\"text\"\n              className=\"form-control search-input\"\n              placeholder=\"type to search\"\n              value={this.state.term}\n              onChange={this.onSearchChange} />\n    );\n  }\n}\n\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Component } from 'react';\n\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n  render () {\n    const { label, onDeleted,\n            onToggleImportant,\n            onToggleDone,\n            important,\n            done, } = this.props;\n\n    let classNames = 'todo-list-item';\n    if (done) {\n      classNames += ' done';\n    }\n    \n    if (important) {\n      classNames += ' important'\n    }\n  \n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-list-item-label\"\n          onClick={onToggleDone}>\n          {label}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportant}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n  }\n}\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\n\nimport TodoListItem from './todo-list-item';\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted,\n                    onToggleImportant,\n                    onToggleDone, }) => {\n\n  const elements = todos.map((item) => {\n    const { id, ...itemProps } = item;\n\n    return (\n      <li key={id} className=\"list-group-item\">\n        <TodoListItem \n          {...itemProps }\n          onDeleted={() => onDeleted(id)}\n          onToggleImportant={() => onToggleImportant(id)}\n          onToggleDone={() => onToggleDone(id)} />\n      </li>\n    );\n  });\n\n  return (\n    <ul className=\"list-group todo-list\">\n      { elements }\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import ItemStatusFilter from './item-status-filter'\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\n\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n  buttons = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'done', label: 'Done' },\n  ]\n  \n  render () {\n    const { filter, onFilterChange } = this.props;\n    \n    const buttons = this.buttons.map(({name, label}) => {\n      const isActive = filter === name;\n      const clazz = isActive ? 'btn-info': 'btn-outline-secondary'\n      return (\n        <button type=\"button\"\n                className={`btn ${clazz}`}\n                key={name} \n                onClick={() => onFilterChange(name)} >\n                {label}\n        </button>\n      );\n    });\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    );\n  }\n}\n","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;\r\n","import React, { Component } from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n\tstate = {\r\n\t\tlabel: ''\r\n\t};\r\n\t\r\n\tonLabelChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\tlabel: e.target.value\r\n\t\t});\r\n\t};\r\n\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.onAdded(this.state.label);\r\n\t\tthis.setState({\r\n\t\t\tlabel: ''\r\n\t\t});\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form className=\"item-add-form d-flex\"\r\n\t\t\t\t  onSubmit={this.onSubmit}>\r\n\t\t\t\t<input type=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tonChange={this.onLabelChange}\r\n\t\t\t\t\t\tplaceholder=\"what needs to be done?\"\r\n\t\t\t\t\t\tvalue={this.state.label} />\r\n\t\t\t\t<button className=\"btn btn-outline-secondary\">Add item</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}","import App from './app';\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\nexport default class App extends Component {\r\n\r\n  maxId = 100;\r\n  \r\n  state = {\r\n    todoData: [\r\n      this.createTodoItem('Drink Coffee'),\r\n      this.createTodoItem('Make awesome app'),\r\n      this.createTodoItem('Have a lunch'),\r\n    ],\r\n    term: '',\r\n    filter: 'all' //active, all, done\r\n  };\r\n\r\n  createTodoItem(label) {\r\n    return {\r\n      label,\r\n      important: false,\r\n      done: false,\r\n      id: this.maxId++\r\n    };\r\n  };\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ todoData }) => {\r\n      const idx = todoData.findIndex((el) => el.id === id); \r\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)]\r\n      return {\r\n        todoData: newArray,\r\n      }\r\n    });\r\n  };\r\n\r\n  addItem = (text) => {\r\n    // g id\r\n    const newItem = this.createTodoItem(text)\r\n\r\n    this.setState(({ todoData }) => {\r\n      const newArr = [\r\n        ...todoData,\r\n        newItem\r\n      ];\r\n      return {\r\n        todoData: newArr\r\n      };\r\n    });   \r\n  };\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id); \r\n    const oldItem = arr[idx];\r\n    const newItem = {...oldItem, [propName]: !oldItem[propName] };\r\n    return [\r\n      ...arr.slice(0, idx), \r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  };\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'important')\r\n      };\r\n    });\r\n  };\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return {\r\n        todoData: this.toggleProperty(todoData, id, 'done')\r\n      };\r\n    });\r\n  };\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items\r\n    }\r\n    \r\n    return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  onSearchChange = (term) => {\r\n    this.setState({ term });\r\n  };\r\n\r\n  filter(items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  render() {\r\n    const { todoData, term, filter } = this.state;\r\n\r\n    const visibleItems = this.filter(\r\n      this.search(todoData, term), filter);\r\n      \r\n    const doneCount = todoData.filter((el) => el.done).length;\r\n    const todoCount = todoData.length - doneCount\r\n     \r\n    return (\r\n      <div className=\"todo-app\">\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"top-panel d-flex\">\r\n          <SearchPanel \r\n          onSearchChange={this.onSearchChange} />\r\n          <ItemStatusFilter \r\n            filter={filter}\r\n            onFilterChange={this.onFilterChange} />\r\n        </div>\r\n  \r\n        <TodoList \r\n          todos={visibleItems}\r\n          onDeleted={ this.deleteItem }\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />\r\n        <ItemAddForm onAdded={ this.addItem } />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\nReactDOM.render(<App />,\n  document.getElementById('root'));\n"],"sourceRoot":""}